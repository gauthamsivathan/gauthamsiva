/* canvas-toBlob.js
 * A canvas.toBlob() implementation.
 * 2011-07-13
 * 
 * By Eli Grey, http://eligrey.com and Devin Samarin, https://github.com/eboyjr
 * License: X11/MIT
 *   See LICENSE.md
 */
!function(e){"use strict"
var t,o=e.Uint8Array,n=e.HTMLCanvasElement,s=/\s*;\s*base64\s*(?:;|$)/i,i=function(e){for(var n,s,i=e.length,a=new o(i/4*3|0),r=0,l=0,p=[0,0],b=0,c=0;i--;)s=e.charCodeAt(r++),255!==(n=t[s-43])&&void 0!==n&&(p[1]=p[0],p[0]=s,c=c<<6|n,4===++b&&(a[l++]=c>>>16,61!==p[1]&&(a[l++]=c>>>8),61!==p[0]&&(a[l++]=c),b=0))
return a.buffer}
o&&(t=new o([62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,0,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51])),n&&!n.prototype.toBlob&&(n.prototype.toBlob=function(e,t){if(t||(t="image/png"),this.mozGetAsFile)return void e(this.mozGetAsFile("canvas",t))
var n,a=Array.prototype.slice.call(arguments,1),r=this.toDataURL.apply(this,a),l=r.indexOf(","),p=r.substring(l+1),b=s.test(r.substring(0,l))
Blob.fake?(n=new Blob,n.encoding=b?"base64":"URI",n.data=p,n.size=p.length):o&&(n=b?new Blob([i(p)],{type:t}):new Blob([decodeURIComponent(p)],{type:t})),e(n)})}(self)
