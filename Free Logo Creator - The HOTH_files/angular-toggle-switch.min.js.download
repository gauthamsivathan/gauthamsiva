angular.module("toggle-switch",["ng"]).directive("toggleSwitch",["$compile",function(e){return{restrict:"EA",replace:!0,require:"ngModel",scope:{isDisabled:"=",onLabel:"@",offLabel:"@",knobLabel:"@",html:"=",onChange:"&"},template:'<div class="ats-switch" ng-click="toggle()" ng-keypress="onKeyPress($event)" ng-class="{ \'disabled\': isDisabled }" role="switch" aria-checked="{{!!model}}"><div class="switch-animate" ng-class="{\'switch-off\': !model, \'switch-on\': model}"><span class="switch-left"></span><span class="knob"></span><span class="switch-right"></span></div></div>',compile:function(n,a){return angular.isUndefined(a.onLabel)&&(a.onLabel="On"),angular.isUndefined(a.offLabel)&&(a.offLabel="Off"),angular.isUndefined(a.knobLabel)&&(a.knobLabel="Â "),angular.isUndefined(a.isDisabled)&&(a.isDisabled=!1),angular.isUndefined(a.html)&&(a.html=!1),angular.isUndefined(a.tabindex)&&(a.tabindex=0),function(n,t,i,l){t.attr("tabindex",a.tabindex),n.toggle=function(){n.isDisabled||(n.model=!n.model,l.$setViewValue(n.model)),n.onChange()}
n.onKeyPress=function(e){32!=e.charCode||e.altKey||e.ctrlKey||e.metaKey||n.toggle()},l.$formatters.push(function(e){return e}),l.$parsers.push(function(e){return e}),l.$viewChangeListeners.push(function(){n.$eval(a.ngChange)}),l.$render=function(){n.model=l.$viewValue}
var s=function(a,t){a=angular.element(a)
var i=!0===t?"ng-bind-html":"ng-bind"
a.removeAttr("ng-bind-html"),a.removeAttr("ng-bind"),angular.element(a).hasClass("switch-left")&&a.attr(i,"onLabel"),a.hasClass("knob")&&a.attr(i,"knobLabel"),a.hasClass("switch-right")&&a.attr(i,"offLabel"),e(a)(n,function(e,n){a.replaceWith(e)})},o=function(e,n){angular.forEach(e[0].children[0].children,function(e,a){s(e,n)})}
n.$watch("html",function(e){o(t,e)})}}}}])
